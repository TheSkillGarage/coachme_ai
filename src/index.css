@import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&family=Noto+Sans+Bhaiksuki&display=swap');

@import "tailwindcss";

@theme {
  /* primary colors */
  --color-primary-50: #F0E6EF;
  --color-primary-100: #D0B0CD;
  --color-primary-200: #B98AB5;
  --color-primary-300: #995493;
  --color-primary-400: #85337E;
  --color-primary-500: #67005E;
  --color-primary-600: #5E0056;
  --color-primary-700: #490043;
  --color-primary-800: #390034;
  --color-primary-900: #2B0027;

  /* secondary text shades */
  --color-grey-50: #E8E8E8;
  --color-grey-100: #B8B8B8;
  --color-grey-200: #969696;
  --color-grey-300: #666666;
  --color-grey-400: #494949;
  --color-grey-500: #1B1B1B;
  --color-grey-600: #191919;
  --color-grey-700: #131313;
  --color-grey-800: #0F0F0F;
  --color-grey-900: #0B0B0B;

  --color-purple-50: #FFFBFF;
  --color-purple-100: #FFF4FE;
  --color-purple-200: #FFEEFE;
  --color-purple-300: #FFE6FD;
  --color-purple-400: #FFE1FD;
  /* Original: #FFDAFC */
  --color-purple-500: #FFDAFC;
  --color-purple-600: #E8C6E5;
  --color-purple-700: #B59BB3;
  --color-purple-800: #8C788B;
  --color-purple-900: #6B5C6A;
}

body {
  font-family: 'Montserrat', sans-serif;
}

html {
  scroll-behavior: smooth;
}

.circle-loader-container {
  display: flex;
  justify-content: center;
  align-items: center;
  /* Optional: Center the loader on the screen or in its parent */
  /* margin: 50px auto; */
}

.circle-loader-spinner {
  position: relative;
  /* Calculate the size based on radius and dot size */
  width: calc(2 * var(--circle-radius) + var(--dot-size));
  height: calc(2 * var(--circle-radius) + var(--dot-size));
}

.circle-loader-dot {
  position: absolute;
  top: 50%;
  left: 50%;
  border-radius: 50%;
  width: var(--dot-size);
  height: var(--dot-size);
  margin-top: calc(var(--dot-size) / -2);
  /* Adjust for dot's own size */
  margin-left: calc(var(--dot-size) / -2);
  /* Adjust for dot's own size */
  transform-origin: center center;
  /* Ensure rotation is from its own center */
}

/* Keyframe animation for the active dot */
@keyframes spin-color {
  0% {
    background-color: var(--active-dot-color);
  }

  12.5% {
    /* (1 / numDots) * 100% - Adjust based on your numDots */
    background-color: var(--inactive-dot-color);
  }

  100% {
    background-color: var(--inactive-dot-color);
  }
}

/* Rotate the entire spinner container to simulate the active dot moving */
@keyframes rotate-spinner {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

.circle-loader-spinner {
  animation: rotate-spinner var(--animation-duration) linear infinite;
}

/* The first dot starts as active and animates its color */
.circle-loader-dot.active {
  animation: spin-color var(--animation-duration) linear infinite;
  /* Ensure it doesn't rotate with the parent spinner, as its color animates */
  /* This ensures only its color changes, and the spinner's rotation creates the illusion */
}